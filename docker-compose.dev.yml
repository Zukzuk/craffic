version: "3"

services:

  # # The craffic reactjs_web service is responsible for running our webclient.
  # reactjs_web:
  #   container_name: reactjs_web
  #   build:
  #     # Tell Docker which files should be sent to the Docker daemon
  #     context: ./web
  #     # Tell compose to only run the 'development' stage of the docker file
  #     target: development
  #   volumes:
  #   - ./web:/usr/src/app
  #   - /usr/src/app/node_modules
  #   ports:
  #   - ${REACTJS_PORT}:${REACTJS_PORT}
  #   # This runs after development stage is done
  #   command: react-scripts start
  #   env_file:
  #   - ./web/.docker.env
  #   networks:
  #   - postgres
  #   depends_on:
  #   - redis
  #   - postgres

  # The craffic nestjs_server service is responsible for running our server and API.
  nestjs_server:
    container_name: nestjs_server
    build:
      # Tell Docker which files should be sent to the Docker daemon
      context: ./server
      # Tell compose to only run the 'development' stage of the docker file
      target: development
    volumes:
    - ./server:/usr/src/app
    - /usr/src/app/node_modules
    ports:
    - ${NESTJS_PORT}:${NESTJS_PORT}
    # For debugging purposes
    - ${NESTJS_DEBUG_PORT}:${NESTJS_DEBUG_PORT}
    # This runs after development stage is done
    command: npm run start:dev
    env_file:
    - ./server/.docker.env
    networks:
    - postgres
    depends_on:
    - redis
    - postgres

  redis:
    container_name: redis
    image: redis:latest
    env_file:
    - .env
    networks:
    - postgres

  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
    - postgres
    env_file:
    - .env
    ports:
    - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
    # Make sure the db persists by using a named volume.
    - /data/postgres:/data/postgres
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    links:
    - postgres:postgres
    ports:
    - ${PGADMIN_PORT}:80
    volumes:
    - /data/pgadmin:/root/.pgadmin
    env_file:
    - .env
    networks:
    - postgres

networks:
  postgres:
    driver: bridge

volumes:
  pgdata:
