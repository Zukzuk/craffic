version: "3"

services:

  # # The craffic reactjs_web service is responsible for running our webclient.
  # reactjs_web:
  #   container_name: reactjs_web
  #   build:
  #     # Tell Docker which files should be sent to the Docker daemon
  #     context: ./web
  #     # Tell compose to only run the 'development' stage of the docker file
  #     target: development
  #   volumes:
  #   - ./web:/usr/src/app
  #   - /usr/src/app/node_modules
  #   ports:
  #   - ${REACTJS_PORT}:3000
  #   # This runs after development stage is done
  #   command: react-scripts start
  #   env_file:
  #   - ./web/.docker.env
  #   networks:
  #   - postgres
  #   depends_on:
  #   - redis
  #   - postgres

  # The craffic nestjs_server service is responsible for running our server and API.
  nestjs-server:
    container_name: nestjs-server
    build:
      context: ./server
      dockerfile: Dockerfile.dev
      # Tell compose to only build the 'development' stage of the docker file
      target: development
    volumes:
    # Use bind mount to make development dir available in container
    - ./server:/usr/src/app
    # Make empty node_modules dir available in container
    - /usr/src/app/node_modules
    ports:
    - 4000:4000
    # For debugging purposes
    - 9229:9229
    # This runs after development stage is done
    command: npm run start:dev
    networks:
    - network-postgres
    depends_on:
    - redis
    - postgres

  redis:
    container_name: redis
    image: redis:latest
    env_file:
    - .env
    networks:
    - network-postgres

  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
    - network-postgres
    env_file:
    - .env
    ports:
    - 5432:5432
    volumes:
    - /data/postgres:/data/postgres
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    links:
    - postgres:postgres
    ports:
    - 8080:80
    volumes:
    - /data/pgadmin:/root/.pgadmin
    env_file:
    - .env
    networks:
    - network-postgres

networks:
  network-postgres:
    driver: bridge